1) To pull the image from docker-hub
docker pull <image-name>

2) To run the docker:
docker run <image-name>

[Note: docker run == (docker create <image-name> + docker start -a <container id>) commands behind the sence]

3) To run the docker in detached mode
docker -d run <image-name>

4) Override command to run
docker run busybox ls
docker run busybox echo Hi Murtuza

5) List **Running** containers
docker ps

6) List all containers
docker ps -a
docker ps -aq // List only IDs

7) To remove the container
docker rm <CONTAINER ID | NAME>

8) To remove the container forcefully (even if the container is running)
docker rm -f <CONTAINER ID | NAME>

9) To remove all the containers
docker rm -f $(docker ps -aq)

10) To remove all containers, images, build cache etc (after below command images will be downloaded again)
docker system prune

11) See the docker logs, even if container is exited
docker logs <container-id>

12) Stop the running docker gracefully
docker stop <container-id>

13) Kill the running docker (Forcefully terminate and used when container is hanged or not responding)
docker kill <container-id>

14) Execute additional command 
docker exec -it <container-id> <command>
eg:- docker exec -it <container-id> /bin/bash

15) Execute additional command along with docker run
docker run -it busybox sh

(Note:When we run -it with run then it will not execute default command)

16) Build an image using the Dockerfile
cd <to folder where Dockerfile is present> 
docker build .


17) Build an image using the Dockerfile and add a TAG
docker build -t <docker-id>/<repo>:<version> .
eg:- docker build -t mzabuawala/pgadmin4:latest .

18) Build an image from running conrainer 
docker commit -c 'CMD ["commandToExecute"]' <container-id>



